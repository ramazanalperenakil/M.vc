@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h2>Yazar Düzenleme Sayfası</h2>

@using (Html.BeginForm("EditWriter", "Writer", FormMethod.Post))
{

    @Html.Label("Yazar id")
    @Html.TextBoxFor(x => x.WriterID, new { @class = "form-control" })
    <br />
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurname)

    <br />
    @Html.Label("Yazar Başlık")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br />
    @Html.Label("Yazar Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Yazar Şifresi")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />
    @Html.Label("Yazar Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar  Hakkında")
    @Html.TextBoxFor(x => x.WriterAbaut, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbaut)
    <br />
    <button class="btn btn-success">Yazar Güncelle</button>
}
